apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: confluent-ldap
  labels:
    app.kubernetes.io/instance: confluent
    app.kubernetes.io/name: kafka
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: confluent
      app.kubernetes.io/name: kafka
  serviceName: kafka-headless
  podManagementPolicy: OrderedReady
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: confluent
        app.kubernetes.io/name: kafka
    spec:
      containers:
      - name: kafka-broker
        image: "confluentinc/cp-server:7.0.1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        ports:
        - containerPort: 9092
          name: kafka-ext
        - containerPort: 9071
          name: kafka-int
        - containerPort: 9072
          name: kafka-rep
        - containerPort: 8090
          name: http-mds
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        env:
        #### K8S Env Varaibles ####
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ##### JVM Options ####
        - name: KAFKA_HEAP_OPTS
          value: "-Xms512M -Xmx512M"
        #### LOGGING ####
        - name: KAFKA_LOG4J_LOGGERS
          value: "kafka.authorizer.logger=INFO,io.confluent.security.auth.provider.ldap=DEBUG"
        - name: KAFKA_LOG4J_ROOT_LOGLEVEL
          value: INFO
        #### Zookeeper ####
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        #### Storage ####
        - name: KAFKA_LOG_DIRS
          value: /var/lib/kafka/data
        #### Listeners ####
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: EXTERNAL:SASL_PLAINTEXT,INTERNAL:PLAINTEXT,REPLICATION:PLAINTEXT
        - name: KAFKA_SASL_ENABLED_MECHANISMS
          value: PLAIN
        #### Replication ####
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: REPLICATION
        #### External Listener ####
        - name: KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS
          value: PLAIN
        - name: KAFKA_LISTENER_NAME_EXTERNAL_SASL_MECHANISMS
          value: PLAIN
        - name: KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG
          value: "org.apache.kafka.common.security.plain.PlainLoginModule required;"
        - name: KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS
          value: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
        #### Authorization ####
        - name: KAFKA_SUPER_USERS
          value: User:admin;User:kafka;User:ANONYMOUS
        - name: KAFKA_AUTHORIZER_CLASS_NAME
          value: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
        - name: KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS
          value: CONFLUENT
        #### MDS ####
        # https://docs.confluent.io/platform/current/kafka/configure-mds/index.html
        - name: KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS
          value: http://0.0.0.0:8090
        - name: KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD
          value: BEARER
        - name: KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH
          value: /mnt/secrets/mds-token/mdsTokenKeyPair.pem
        #- name: KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH
        #  value: /mnt/secrets/mds-token/mdsPublicKey.pem
        #- name: KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE
        #  value: "false"
        #- name: KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM
        #  value: RS256
        #- name: KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS
        #  value: "3600000"
        #- name: KAFKA_CONFLUENT_METADATA_SERVER_ENABLE_SERVER_URLS_REFRESH
        #  value: "false"
        #### MDS Ldap ####
        # Configure MDS to talk to AD/LDAP
        - name: KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL
          value: ldap://ada.letuscode.xyz:389
        # Authenticate to LDAP
        - name: KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION
          value: simple
        - name: KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL
          valueFrom:
            secretKeyRef:
              name: mds-credentials
              key: username
        - name: KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: mds-credentials
              key: password
        # Locate LDAP users and groups
        - name: KAFKA_LDAP_USER_SEARCH_BASE
          value: ou=Users,ou=ada,dc=ada,dc=letuscode,dc=xyz
        - name: KAFKA_LDAP_USER_NAME_ATTRIBUTE
          value: sAMAccountName
        - name: KAFKA_LDAP_USER_OBJECT_CLASS
          value: user
        - name: KAFKA_LDAP_SEARCH_MODE
          value: GROUPS
        - name: KAFKA_LDAP_GROUP_SEARCH_BASE
          value: ou=Groups,ou=ada,dc=ada,dc=letuscode,dc=xyz
        - name: KAFKA_LDAP_GROUP_NAME_ATTRIBUTE
          value: sAMAccountName
        - name: KAFKA_LDAP_GROUP_OBJECT_CLASS
          value: group
        - name: KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE
          value: member
        - name: KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN
          value: CN=(.*),OU=Users,OU=ada,DC=ada,DC=letuscode,DC=xyz
        #### Metrics ####
        - name: KAFKA_METRIC_REPORTERS
          value: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
        - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
          value: kafka:9071
        #### Defaults ####
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_NUM_PARTITIONS
          value: "3"
        command:
        - sh
        - -exc
        - |
          export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=EXTERNAL://${POD_NAME}.kafka-headless.${POD_NAMESPACE}.svc.cluster.local:9092,INTERNAL://${POD_NAME}.kafka-headless.${POD_NAMESPACE}.svc.cluster.local:9071,REPLICATION://${POD_NAME}.kafka-headless.${POD_NAMESPACE}.svc.cluster.local:9072 && \
          export KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS=http://${POD_NAME}.kafka-headless.${POD_NAMESPACE}.svc.cluster.local:8090 && \
          exec /etc/confluent/docker/run
        volumeMounts:
        - name: mds-token
          mountPath: /mnt/secrets/mds-token
          readOnly: true
        - name: datadir
          mountPath: /var/lib/kafka
      volumes:
      - name: mds-token
        secret:
          secretName: mds-token
      enableServiceLinks: false
      securityContext:
        fsGroup: 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/os"
                operator: "In"
                values: ["linux"]
              - key: "kubernetes.io/arch"
                operator: "In"
                values: ["amd64"]
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/instance"
                  operator: In
                  values: ["confluent"]
                - key: "app.kubernetes.io/name"
                  operator: In
                  values: ["kafka"]
              topologyKey: "kubernetes.io/hostname"
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/instance"
                  operator: In
                  values: ["confluent"]
                - key: "app.kubernetes.io/name"
                  operator: In
                  values: ["kafka"]
              topologyKey: "topology.kubernetes.io/zone"
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "20Gi"
      storageClassName: "gp3"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: confluent-ldap
  labels:
    app.kubernetes.io/instance: confluent
    app.kubernetes.io/name: kafka
spec:
  ports:
  - port: 9092
    name: kafka-ext
  - port: 9071
    name: kafka-int
  - port: 9072
    name: kafka-rep
  - port: 8090
    name: mds-http
  clusterIP: None
  selector:
    app.kubernetes.io/instance: confluent
    app.kubernetes.io/name: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: confluent-ldap
  labels:
    app.kubernetes.io/instance: confluent
    app.kubernetes.io/name: kafka
spec:
  type: ClusterIP
  ports:
  - port: 9092
    name: kafka-ext
  - port: 9071
    name: kafka-int
  - port: 9072
    name: kafka-rep
  - port: 8090
    name: mds-http
  selector:
    app.kubernetes.io/instance: confluent
    app.kubernetes.io/name: kafka
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kafka
  namespace: confluent-ldap
  labels:
    app.kubernetes.io/instance: confluent
    app.kubernetes.io/name: kafka
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: confluent
      app.kubernetes.io/name: kafka
  maxUnavailable: 1
