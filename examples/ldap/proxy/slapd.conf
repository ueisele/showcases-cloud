#
# See slapd.conf(5) for details on configuration options.
# This file should NOT be world readable.
#

# Include schemas
include         /etc/ldap/schema/corba.schema
include         /etc/ldap/schema/core.schema
include         /etc/ldap/schema/cosine.schema
include         /etc/ldap/schema/duaconf.schema
include         /etc/ldap/schema/dyngroup.schema
include         /etc/ldap/schema/inetorgperson.schema
include         /etc/ldap/schema/java.schema
include         /etc/ldap/schema/misc.schema
include         /etc/ldap/schema/nis.schema
include         /etc/ldap/schema/openldap.schema
include         /etc/ldap/schema/ppolicy.schema
include         /etc/ldap/schema/collective.schema

# Allow LDAPv2 client connections.  This is NOT the default.
allow bind_v2

pidfile         /var/run/slapd/slapd.pid
argsfile        /var/run/slapd/slapd.args

# Load dynamic backend modules
# - modulepath is architecture dependent value (32/64-bit system)
# - back_sql.la overlay requires openldap-server-sql package
# - dyngroup.la and dynlist.la cannot be used at the same time

modulepath  /usr/lib/ldap
moduleload  back_ldap
moduleload  back_meta
moduleload  rwm

# The next three lines allow use of TLS for encrypting connections using a
# dummy test certificate which you can generate by running.
# TLSCACertificateFile /root/openldap_proxy/data/certs/ldap.crt
# TLSCertificateFile /root/openldap_proxy/data/certs/ldap.crt
# TLSCertificateKeyFile /root/openldap_proxy/data/certs/ldap.key

# Log level
loglevel 256

#######################################################################
# database definitions
#######################################################################

#### Database definition #########################################

database meta
suffix   "ou=cp,dc=ada,dc=letuscode,dc=xyz"
rootdn   "cn=Admin,ou=cp,dc=ada,dc=letuscode,dc=xyz"
rootpw   ${CP_ADA_LETUSCODE_XYZ_ADMIN_PASSWORD}
#readonly true

rebind-as-user  true
chase-referrals false

uri           "ldap://ada.letuscode.xyz/ou=ServiceAccounts,ou=cp,dc=ada,dc=letuscode,dc=xyz"
suffixmassage "ou=ServiceAccounts,ou=cp,dc=ada,dc=letuscode,dc=xyz" "ou=ada,dc=ada,dc=letuscode,dc=xyz"
default-target

idassert-bind
    bindmethod=simple
    binddn="cn=Admin,ou=Users,ou=ada,dc=ada,dc=letuscode,dc=xyz"
    credentials="${ADA_LETUSCODE_XYZ_ADMIN_PASSWORD}"
    mode=none
    flags=non-prescriptive
idassert-authzFrom "dn.exact:cn=Manager,ou=cp,dc=ada,dc=letuscode,dc=xyz"

map attribute   uid           SAMACCOUNTNAME
map attribute   cn            cn
map attribute   mail          USERPRINCIPALNAME
map attribute   member        member
map objectclass account       USER
map objectclass groupOfNames  GROUP
map objectclass ipHost        COMPUTER
map attribute *

uri           "ldap://com.codelabs.dev/ou=Persons,ou=cp,dc=ada,dc=letuscode,dc=xyz"
suffixmassage "ou=Persons,ou=cp,dc=ada,dc=letuscode,dc=xyz" "ou=com,dc=com,dc=codelabs,dc=dev"

idassert-bind
    bindmethod=simple
    binddn="cn=Admin,ou=Users,ou=com,dc=com,dc=codelabs,dc=dev"
    credentials="${COM_CODELABS_DEV_ADMIN_PASSWORD}"
    mode=none
    flags=non-prescriptive
idassert-authzFrom "dn.exact:cn=Manager,ou=cp,dc=ada,dc=letuscode,dc=xyz"

map attribute   uid           SAMACCOUNTNAME
map attribute   cn            cn
map attribute   mail          USERPRINCIPALNAME
map attribute   member        member
map objectclass account       USER
map objectclass groupOfNames  GROUP
map objectclass ipHost        COMPUTER
map attribute *